%Linear convolution
n1 = input('Enter the number of samples in sequence1 '); x = input('Enter sequence1 ');
figure; subplot(331); stem(x); title('sequence 1'); xlabel('samples'); ylabel('Amplitude');

n2 = input('Enter the number of samples in sequence2 '); h = input('Enter sequence2 ');
subplot(332); stem(h); title('sequence 2'); xlabel('samples'); ylabel('Amplitude');
%Zero Padding N = n1 + n2-1;
x1 = [x zeros(1, N-n1)]; subplot(334);
stem(x1);
title('sequence 1 with zero padding'); xlabel('samples'); ylabel('Amplitude');
h1 = [h zeros(1, N-n2)]; subplot(335);
stem(h1);
title('sequence 2 with zero padding'); xlabel('samples'); ylabel('Amplitude');
for i= 1:1:N y (i) = 0;
for j= 1:1:i
y (i) = y (i) + (x1(j)*h1((i-j) + 1)); end
end


 
subplot(337); stem (y);
title ('convolved sequence'); xlabel ('samples');
ylabel ('Amplitude');


%Circular Convolution x=input('Enter the array of x '); h=input('Enter the array of h '); n1=length(x);
n2=length(h); if n1>=n2 L=n1;
else L=n2;
end
x1=[x zeros(1,(L-n1))];
h1=[h zeros(1,(L-n2))]; for m=1:L
for n=1:L if n>m
H(m,n)=h1(L+m-n+1);
else
H(m,n)=h1(m-n+1);
end end end
disp (H);
y= (H*x1');
disp(y);

